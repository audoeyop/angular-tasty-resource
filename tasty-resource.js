// Generated by CoffeeScript 1.6.3
(function() {
  var TastyResourceFactory, module;

  TastyResourceFactory = (function() {
    function TastyResourceFactory($http, _config) {
      var _base;
      this.$http = $http;
      this._config = _config;
      (_base = this._config).cache || (_base.cache = false);
      this._resolved = true;
    }

    TastyResourceFactory.prototype.query = function(filter, success, error) {
      var attr, filters, promise, results, url, value,
        _this = this;
      results = [];
      url = this._config.url;
      filters = [];
      for (attr in filter) {
        value = filter[attr];
        filters.push("" + attr + "=" + value);
      }
      if (filters.length > 0) {
        url = "" + this._config.url + "?" + (filters.join('&'));
      }
      this._resolved = false;
      promise = this.$http.get(url, {
        cache: this._config.cache
      });
      promise.then(function(response) {
        angular.copy(response.data.objects, results);
        return results.meta = response.data.meta;
      });
      promise.then(function() {
        return _this._resolved = true;
      });
      promise.then(success, error);
      return results;
    };

    TastyResourceFactory.prototype.get = function(id, success, error) {
      var promise, resource, url,
        _this = this;
      url = id[0] === "/" ? id : "" + this._config.url + id + "/";
      resource = new TastyResourceFactory(this.$http, this._config);
      this._resolved = false;
      promise = this.$http.get(url, {
        cache: this._config.cache
      });
      promise.then(function(response) {
        var key, value, _ref, _results;
        _ref = response.data;
        _results = [];
        for (key in _ref) {
          value = _ref[key];
          _results.push(resource[key] = value);
        }
        return _results;
      });
      promise.then(function() {
        return _this._resolved = true;
      });
      promise.then(success, error);
      return resource;
    };

    TastyResourceFactory.prototype.post = function() {
      var promise,
        _this = this;
      promise = this.$http.post(this._config.url, this._get_data());
      promise.then(function() {
        return _this._resolved = true;
      });
      return promise;
    };

    TastyResourceFactory.prototype.put = function(id) {
      var promise, url,
        _this = this;
      if (id == null) {
        id = this.id;
      }
      url = id[0] === "/" ? id : "" + this._config.url + id + "/";
      promise = this.$http.put(url, this._get_data());
      promise.then(function() {
        return _this._resolved = true;
      });
      return promise;
    };

    TastyResourceFactory.prototype.resolved = function() {
      return this._resolved;
    };

    TastyResourceFactory.prototype._get_data = function() {
      var attr, data, value, _ref;
      data = {};
      for (attr in this) {
        value = this[attr];
        if (typeof value !== "function" && ((_ref = attr[0]) !== "$" && _ref !== "_")) {
          if (value instanceof TastyResourceFactory) {
            data[attr] = value.resource_uri;
          } else {
            data[attr] = value;
          }
        }
      }
      return data;
    };

    return TastyResourceFactory;

  })();

  module = angular.module("tastyResource", []);

  module.factory("TastyResource", [
    "$http", function($http) {
      return function(config) {
        return new TastyResourceFactory($http, config);
      };
    }
  ]);

}).call(this);
